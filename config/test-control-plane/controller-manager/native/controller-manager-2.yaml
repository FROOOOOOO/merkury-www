apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kube-controller-manager-2
  namespace: kube-system
spec:
  podManagementPolicy: Parallel
  replicas: 1
  revisionHistoryLimit: 100
  serviceName: cm-2
  selector:
    matchLabels:
      component: kube-controller-manager
      tier: control-plane
      node: master-2
  template:
    metadata:
      labels:
        component: kube-controller-manager
        tier: control-plane
        node: master-2
        control: test-master
      name: kube-controller-manager
      namespace: kube-system
    spec:
      containers:
        - command:
            - kube-controller-manager
            - --allocate-node-cidrs=true
            - --authentication-kubeconfig=/etc/kubernetes/controller-manager.conf
            - --authorization-kubeconfig=/etc/kubernetes/controller-manager.conf
            - --bind-address=<MASTER-NODE-2-IP>
            - --client-ca-file=/etc/kubernetes/pki/test-ca.crt
            - --cluster-cidr=172.16.0.0/11  # number of allocatable IP for fake nodes = 2^(26-11) = 32768
            - --node-cidr-mask-size=26  # number of allocatable IP for pods per fake node = 2^6 = 64
            - --cluster-name=kubernetes
            - --cluster-signing-cert-file=/etc/kubernetes/pki/test-ca.crt
            - --cluster-signing-key-file=/etc/kubernetes/pki/test-ca.key
            - --controllers=*,bootstrapsigner,tokencleaner
            - --kubeconfig=/etc/kubernetes/controller-manager.conf
            - --leader-elect=true
            - --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt
            - --root-ca-file=/etc/kubernetes/pki/test-ca.crt
            - --service-account-private-key-file=/etc/kubernetes/pki/sa.key
            - --service-cluster-ip-range=10.96.0.0/12
            - --use-service-account-credentials=true
          image: registry.cn-hangzhou.aliyuncs.com/google_containers/kube-controller-manager:v1.27.4
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 8
            httpGet:
              host: <MASTER-NODE-2-IP>
              path: /healthz
              port: 10257
              scheme: HTTPS
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 15
          name: kube-controller-manager
          resources:
            requests:
              cpu: 200m
              memory: 520M
          startupProbe:
            failureThreshold: 24
            httpGet:
              host: <MASTER-NODE-2-IP>
              path: /healthz
              port: 10257
              scheme: HTTPS
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 15
          volumeMounts:
            - mountPath: /etc/ssl/certs
              name: ca-certs
              readOnly: true
            - mountPath: /etc/ca-certificates
              name: etc-ca-certificates
              readOnly: true
            - mountPath: /etc/pki
              name: etc-pki
              readOnly: true
            - mountPath: /usr/libexec/kubernetes/kubelet-plugins/volume/exec
              name: flexvolume-dir
            - mountPath: /etc/kubernetes/pki
              name: k8s-certs
              readOnly: true
            - mountPath: /etc/kubernetes/controller-manager.conf
              name: kubeconfig
              readOnly: true
            - mountPath: /usr/local/share/ca-certificates
              name: usr-local-share-ca-certificates
              readOnly: true
            - mountPath: /usr/share/ca-certificates
              name: usr-share-ca-certificates
              readOnly: true
      hostNetwork: true
      nodeName: test-master-2
      priority: 2000001000
      priorityClassName: system-node-critical
      tolerations:
        - effect: NoSchedule
          operator: Exists
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      volumes:
        - hostPath:
            path: /etc/ssl/certs
            type: DirectoryOrCreate
          name: ca-certs
        - hostPath:
            path: /etc/ca-certificates
            type: DirectoryOrCreate
          name: etc-ca-certificates
        - hostPath:
            path: /etc/pki
            type: DirectoryOrCreate
          name: etc-pki
        - hostPath:
            path: /usr/libexec/kubernetes/kubelet-plugins/volume/exec
            type: DirectoryOrCreate
          name: flexvolume-dir
        - hostPath:
            path: /etc/kubernetes/pki
            type: DirectoryOrCreate
          name: k8s-certs
        - hostPath:
            path: /etc/kubernetes/controller-manager.conf
            type: FileOrCreate
          name: kubeconfig
        - hostPath:
            path: /usr/local/share/ca-certificates
            type: DirectoryOrCreate
          name: usr-local-share-ca-certificates
        - hostPath:
            path: /usr/share/ca-certificates
            type: DirectoryOrCreate
          name: usr-share-ca-certificates

